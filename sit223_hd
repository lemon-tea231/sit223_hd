pipeline {
    agent any
    tools {maven 'maven 3.8.5'}
    environment {
        SONARQUBE = credentials('sit223_hd') 
        SONARQUBE_SERVER = 'Sonarqube'
    }


    stages {
        

        stage('Build') {
            steps {
                echo 'Creating target directory...'
                sh 'mkdir -p target'

                echo 'Compiling Java files from src/com/example...'
                // Point javac to the correct location where .java files are
                sh 'javac -d target $(find src/com/example -name "Main.java")'

                echo 'Creating JAR file...'
                sh 'jar cf target/app.jar -C target .'

                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }
        stage('Test') {
            steps {
               git branch: 'main', url: 'https://github.com/lemon-tea231/sit223_hd.git'
                sh 'ls -la'
                sh 'javac -cp .:lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar -d bin $(find src -name "Main.java")'
                sh '''
          # Create directories
          mkdir -p lib bin

          # Download JUnit and Hamcrest jars if missing
          if [ ! -f lib/junit-4.13.2.jar ]; then
            curl -L -o lib/junit-4.13.2.jar https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar
          fi
          if [ ! -f lib/hamcrest-core-1.3.jar ]; then
            curl -L -o lib/hamcrest-core-1.3.jar https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
          fi

          # Compile all source and test Java files
          javac -cp "lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar" -d bin $(find src/com/example -name "Main.java") $(find test -name "Main.java" 2>/dev/null)

          
        '''


            }
        }


        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to the staging environment...'
                script {
                    sh '''
    aws configure set aws_access_key_id YOUR_KEY
    aws configure set aws_secret_access_key YOUR_SECRET
    aws elasticbeanstalk create-application-version --application-name my-app \
      --version-label v1 --source-bundle S3Bucket=my-bucket,S3Key=my-app-v1.zip

    aws elasticbeanstalk update-environment --environment-name my-env \
      --version-label v1
'''
                }
            }
        }
    }
}
